<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="ListExtensionsTest" tests="21" skipped="0" failures="1" errors="0" timestamp="2023-03-10T18:33:11" hostname="balenablu" time="0.041">
  <properties/>
  <testcase name="append - empty lists" classname="ListExtensionsTest" time="0.018"/>
  <testcase name="concatenate - list of nested lists" classname="ListExtensionsTest" time="0.014">
    <failure message="java.lang.AssertionError: expected:&lt;[1, 2, 3, 4, 5, 6]&gt; but was:&lt;[[1], [2], [3], [], [4, 5, 6]]&gt;" type="java.lang.AssertionError">java.lang.AssertionError: expected:&lt;[1, 2, 3, 4, 5, 6]&gt; but was:&lt;[[1], [2], [3], [], [4, 5, 6]]&gt;
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:120)
	at kotlin.test.junit.JUnitAsserter.assertEquals(JUnitSupport.kt:32)
	at kotlin.test.AssertionsKt__AssertionsKt.assertEquals(Assertions.kt:63)
	at kotlin.test.AssertionsKt.assertEquals(Unknown Source)
	at kotlin.test.AssertionsKt__AssertionsKt.assertEquals$default(Assertions.kt:62)
	at kotlin.test.AssertionsKt.assertEquals$default(Unknown Source)
	at ListExtensionsTest.concatenate - list of nested lists(ListExtensionsTest.kt:54)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <testcase name="size - non-empty list" classname="ListExtensionsTest" time="0.001"/>
  <testcase name="append - non-empty lists" classname="ListExtensionsTest" time="0.0"/>
  <testcase name="fold left - direction independent function" classname="ListExtensionsTest" time="0.002"/>
  <testcase name="concatenate - list of lists" classname="ListExtensionsTest" time="0.0"/>
  <testcase name="fold right - empty list" classname="ListExtensionsTest" time="0.0"/>
  <testcase name="reverse - empty list" classname="ListExtensionsTest" time="0.001"/>
  <testcase name="map - non-empty list" classname="ListExtensionsTest" time="0.0"/>
  <testcase name="size - empty list" classname="ListExtensionsTest" time="0.0"/>
  <testcase name="reverse - non-empty list" classname="ListExtensionsTest" time="0.0"/>
  <testcase name="append - list to empty list" classname="ListExtensionsTest" time="0.001"/>
  <testcase name="concatenate - empty list" classname="ListExtensionsTest" time="0.0"/>
  <testcase name="filter - non-empty list" classname="ListExtensionsTest" time="0.0"/>
  <testcase name="filter - empty list" classname="ListExtensionsTest" time="0.001"/>
  <testcase name="fold left - empty list" classname="ListExtensionsTest" time="0.001"/>
  <testcase name="fold right - direction dependent function" classname="ListExtensionsTest" time="0.0"/>
  <testcase name="fold left - direction dependent function" classname="ListExtensionsTest" time="0.0"/>
  <testcase name="map - empty list" classname="ListExtensionsTest" time="0.0"/>
  <testcase name="fold right - direction independent function" classname="ListExtensionsTest" time="0.001"/>
  <testcase name="reverse - list of lists" classname="ListExtensionsTest" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
